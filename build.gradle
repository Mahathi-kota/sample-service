buildscript {
	ext { springBootVersion = '1.4.2.RELEASE' }
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group = 'io.swagger'
project.version = '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	jcenter()
	mavenCentral()
}

springBoot  { buildInfo() }

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

dependencies {
	compile('io.swagger:swagger-inflector:1.0.10')
	compile('com.github.javafaker:javafaker:0.11') { exclude group: 'com.github.bmoliveira' }
	compile('com.fasterxml.jackson.core:jackson-annotations')
	compile('com.fasterxml.jackson.core:jackson-databind')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')

	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'


	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'info.cukes', name: 'cucumber-junit', version:'1.2.5'
	testCompile group: 'info.cukes', name: 'cucumber-spring', version:'1.2.5'
	testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'
}


// when building on CI Circle, we want to download the deps and then cache them for use next time
// the following code creates tasks that will just download the deps.
configurations.findAll().each { config ->
	task "downloadDependencies${config.name}"(type: Exec, group: 'build', description: "download deps for ${config.name}") {
		//    println "${config}:"
		//    config.allArtifacts.getFiles().each { file -> println " " + file}
		//    config.files().each { file -> println " " + file}
		//    println ' '
		config.files
		commandLine 'echo', "Downloaded all dependencies for ${config.name}"
	}
}

task "downloadDependencies"(type: Exec, group: 'build', description: "download all deps") { commandLine 'echo', "Downloaded all dependencies" }

downloadDependencies.dependsOn {
	tasks.findAll { task ->
		task.name.startsWith('downloadDependencies') && task.name != "downloadDependencies"
	}
}

jacoco { toolVersion = "0.7.7.201606060606" }

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled true
	}
}

test.finalizedBy jacocoTestReport
